name: Solution Deploy

on:
  push:
    branches:
      - main
      - feature/*
    paths-ignore:
      - README.md
      - .gitignore
      - 'backend/**'
  pull_request:
    branches:
      - main

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup TF
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false
    - name: TF init
      run: terraform init -backend-config="access_key=${{ secrets.AZ_TFSTATE_KEY }}"
    - name: TF validate
      run: terraform validate
    - name: TF format
      run: terraform fmt
    - name: Terraform plan
      run: |
        terraform plan -var="client_secret=${{ secrets.az_client_secret}}" -var="client_id=${{ secrets.az_client_id }}" -var="sub_id=${{ secrets.az_sub_id }}" -var="tenant_id=${{ secrets.az_tenant_id }}" -out tfplan
    - name: Publish TF Plan
      uses: actions/upload-artifact@v3
      with:
        name: tfplan
        path: tfplan

  terraform-apply:
      name: TF Apply
      if: github.ref == 'refs/heads/main'
      runs-on: ubuntu-latest
      needs: [terraform-plan]
      
      steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Terraform Init
        run: terraform init -backend-config="access_key=${{ secrets.AZ_TFSTATE_KEY }}"
      - name: Download Terraform Plan
        uses: actions/download-artifact@v3
        with:
          name: tfplan
      - name: Terraform Apply
        run: |
          terraform apply -auto-approve tfplan

  initial-xyz-deploy:
    name: Deploy
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [terraform-apply]

    steps:
    - uses: actions/checkout@v3
    - name: AZ Login
      uses: Azure/login@v1
      with:
        creds: '{"clientId":"${{ secrets.AZ_CLIENT_ID }}","clientSecret":"${{ secrets.AZ_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZ_SUB_ID }}","tenantId":"${{ secrets.AZ_TENANT_ID }}"}'
    - name: Set AKS Context
      id: set-context
      uses: azure/aks-set-context@v3
      with:
        resource-group: 'rg-poc-eus-xyz_app'
        cluster-name: 'aks-xyz-poc-eus-xyz_app'
    - name: Setup kubectl
      id: install-kubectl
      uses: azure/setup-kubectl@v3
    - name: Deploy to AKS
      id: deploy-aks
      uses: azure/k8s-deploy@v4
      with:
        namespace: 'xyz-app'
        manifests: |
          initial-deploy.yaml
        images: 'xyzappsample.azurecr.io/sample/xyzsample:latest'
        pull-images: false
